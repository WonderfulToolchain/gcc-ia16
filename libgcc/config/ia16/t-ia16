# 16.1 Target Makefile Fragments

# We want fine grained libraries, so use the new code
# to build the floating point emulation libraries.
FPBIT = fp-bit.c
DPBIT = dp-bit.c
#TPBIT = tp-bit.c

$(gcc_objdir)/fp-bit.c: $(gcc_srcdir)/config/fp-bit.c
	echo '#define FLOAT' > $(gcc_objdir)/fp-bit.c
	echo '#define SMALL_MACHINE' >> $(gcc_objdir)/fp-bit.c
	cat $(gcc_srcdir)/config/fp-bit.c >> $(gcc_objdir)/fp-bit.c

$(gcc_objdir)/dp-bit.c: $(gcc_srcdir)/config/fp-bit.c
	echo '#define SMALL_MACHINE' > $(gcc_objdir)/dp-bit.c
	cat $(gcc_srcdir)/config/fp-bit.c >> $(gcc_objdir)/dp-bit.c

#$(gcc_objdir)/tp-bit.c: $(gcc_srcdir)/config/fp-bit.c
#	echo '#define EXTENDED_FLOAT_STUBS' > $(gcc_objdir)/tp-bit.c
#	echo '#define SMALL_MACHINE' >> $(gcc_objdir)/tp-bit.c
#	cat $(gcc_srcdir)/config/fp-bit.c >> $(gcc_objdir)/tp-bit.c

# Extra 32-bit integer functions.
intfuncs32 = _ashlXX3 _ashrXX3 _lshrXX3 _cmpXX2 _ucmpXX2
siintfuncs32 = $(subst XX,si,$(intfuncs32))
diintfuncs32 = $(subst XX,di,$(intfuncs32))

#iter-items := $(siintfuncs)
#iter-labels := $(diintfuncs)
#iter-sizes := $(patsubst %,2,$(siintfuncs))

#include $(srcdir)/empty.mk $(patsubst %,$(srcdir)/siditi-object.mk,$(iter-items))

libgcc-objects += $(patsubst %,%$(objext),$(siintfuncs32))
ifeq ($(enable_shared),yes)
libgcc-s-objects += $(patsubst %,%_s$(objext),$(siintfuncs32))
endif

# Extra 16-bit integer functions.
intfuncs16 = _absvXX2 _addvXX3 _subvXX3 _mulvXX3 _negvXX2 _ffsXX2 _clzXX2 \
	     _ctzXX2 _popcountXX2
hiintfuncs16 = $(subst XX,hi,$(intfuncs16))
siintfuncs16 = $(subst XX,si,$(intfuncs16))

iter-items := $(siintfuncs32) $(hiintfuncs16)
iter-labels := $(diintfuncs32) $(siintfuncs16)
iter-sizes := $(patsubst %,2,$(siintfuncs16)) $(patsubst %,2,$(hiintfuncs16))

include $(srcdir)/empty.mk $(patsubst %,$(srcdir)/siditi-object.mk,$(iter-items))

libgcc-objects += $(patsubst %,%$(objext),$(hiintfuncs16))
ifeq ($(enable_shared),yes)
libgcc-s-objects += $(patsubst %,%_s$(objext),$(hiintfuncs16))
endif

# These might cause a divide overflow trap and so are compiled with
# unwinder info.
lib2_divmodsi_funcs = _divXX3 _modXX3 _udivXX3 _umodXX3 _udivmodXX4
